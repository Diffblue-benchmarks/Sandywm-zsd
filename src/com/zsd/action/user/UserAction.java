/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.zsd.action.user;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.zsd.action.base.Transcode;
import com.zsd.factory.AppFactory;
import com.zsd.module.RoleInfo;
import com.zsd.module.School;
import com.zsd.module.User;
import com.zsd.service.RoleInfoManager;
import com.zsd.service.RoleUserInfoManager;
import com.zsd.service.SchoolManager;
import com.zsd.service.UserManager;
import com.zsd.tools.CommonTools;
import com.zsd.tools.CurrentTime;
import com.zsd.tools.MD5;
import com.zsd.util.Constants;


/** 
 * MyEclipse Struts
 * Creation date: 04-24-2019
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
public class UserAction extends DispatchAction {
	
	/**
	 * 根据用户身份导向不同界面
	 * @description
	 * @author Administrator
	 * @date 2019-4-24 下午04:31:43
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward goPage(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		// TODO Auto-generated method stub
		String roleName = Transcode.unescape_new("roleName", request);
		String urlPage = "";
		if(roleName.equals("超级管理员") || roleName.equals("知识点管理员")){
			urlPage = "managerPage";
		}else{
			urlPage = "welcomePage";
		}
		return mapping.findForward(urlPage);
	}
	
	/**
	 * 注册用户信息
	 * @author zong
	 * @date  2019-4-29 上午10:46:12
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward regUserInfo(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		String lastLoginIp = CommonTools.getIpAddress(request); //最后登录Ip
		String area = CommonTools.getSelfArea(lastLoginIp);
		String prov = area.split(":")[0];
		String city = area.split(":")[1];
		UserManager uManager = (UserManager) AppFactory.instance(null).getApp(Constants.WEB_USER_INFO);
		SchoolManager scManager = (SchoolManager) AppFactory.instance(null).getApp(Constants.WEB_SCHOOL_INFO);
		RoleUserInfoManager ruManager = (RoleUserInfoManager) AppFactory.instance(null).getApp(Constants.WEB_ROLE_USER_INFO);
		RoleInfoManager rManager = (RoleInfoManager) AppFactory.instance(null).getApp(Constants.WEB_ROLE_INFO);
		Map<String,Object> map = new HashMap<String,Object>();
		String userAccount =CommonTools.getFinalStr("userAccount",request);
		String roleName =CommonTools.getFinalStr("roleName",request);
		String realName=CommonTools.getFinalStr("realName",request);
		String password=new MD5().calcMD5(CommonTools.getFinalStr("password",request));
		String mobile=CommonTools.getFinalStr("mobile",request);
		String lastLoginDate=CurrentTime.getCurrentTime();
		String signDate=CurrentTime.getCurrentTime();
		Integer schoolId=CommonTools.getFinalInteger("schoolId", request);
		String endDate=CurrentTime.getFinalDateTime(30);
		List<School> scList = scManager.listInfoById(schoolId);
		Integer yearSystem=0;
		if(scList.size()>0){
			yearSystem = scList.get(0).getYearSystem();
		}
		List<User> uList = uManager.listInfoByAccount(userAccount);//判断账户是否存在
		String msg ="fail";//注册用户失败
		if(uList.size()>0){
			msg="exist"; //用户名存在
		}else{
			//1.用户注册
			Integer userId=uManager.addUser(userAccount, realName, password, mobile, lastLoginDate, lastLoginIp, signDate, schoolId, endDate, yearSystem, prov, city);
			if(userId>0){
				msg = "success";//注册用户成功
				
				List<RoleInfo> rList = rManager.listRoleInfo(roleName);
				Integer roleId = 0;
				if(rList.size() > 0){
					roleId = rList.get(0).getId();
					//绑定角色
					ruManager.addRoleUserInfo(userId, roleId);
				}
			}else{
				msg ="fail";//注册用户失败
			}
		}
		map.put("result", msg);
		CommonTools.getJsonPkg(map, response);
		return null;
	}
}